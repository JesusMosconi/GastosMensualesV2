// <auto-generated />
using GastosMensuales.BD.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GastosMensuales.BD.Migrations
{
    [DbContext(typeof(MiDBcontext))]
    [Migration("20250623050316_Inicio")]
    partial class Inicio
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GastosMensuales.BD.Datos.Entity.GastoDiario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total_Acumulado")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<string>("categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("monto")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.HasIndex("TotalId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("GastosDiarios");
                });

            modelBuilder.Entity("GastosMensuales.BD.Datos.Entity.GastoFijo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Detalle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FechaPagado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<bool>("Pagado")
                        .HasColumnType("bit");

                    b.Property<int>("TotalId")
                        .HasColumnType("int");

                    b.Property<decimal>("Total_A_Pagar")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TotalId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("GastosFijos");
                });

            modelBuilder.Entity("GastosMensuales.BD.Datos.Entity.GastoPorCategoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GastoDiarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto_Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("Porcentaje")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GastoDiarioId");

                    b.ToTable("GastosPorCategoria");
                });

            modelBuilder.Entity("GastosMensuales.BD.Datos.Entity.Ingreso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Sobrante")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("Sueldo")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("TotalId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TotalId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Ingresos");
                });

            modelBuilder.Entity("GastosMensuales.BD.Datos.Entity.Total", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Gasto_Diario_Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("Gasto_Fijo_Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("Ingreso_MenosGastosFijos_Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("Ingreso_Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("SaldoActual")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("Id");

                    b.ToTable("Totales");
                });

            modelBuilder.Entity("GastosMensuales.BD.Datos.Entity.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("GastosMensuales.BD.Datos.Entity.GastoDiario", b =>
                {
                    b.HasOne("GastosMensuales.BD.Datos.Entity.Total", "Total")
                        .WithMany("GastosDiarios")
                        .HasForeignKey("TotalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GastosMensuales.BD.Datos.Entity.Usuario", "Usuario")
                        .WithMany("GastosDiarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Total");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GastosMensuales.BD.Datos.Entity.GastoFijo", b =>
                {
                    b.HasOne("GastosMensuales.BD.Datos.Entity.Total", "Total")
                        .WithMany("GastosFijos")
                        .HasForeignKey("TotalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GastosMensuales.BD.Datos.Entity.Usuario", "Usuario")
                        .WithMany("GastosFijos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Total");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GastosMensuales.BD.Datos.Entity.GastoPorCategoria", b =>
                {
                    b.HasOne("GastosMensuales.BD.Datos.Entity.GastoDiario", "GastoDiario")
                        .WithMany()
                        .HasForeignKey("GastoDiarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GastoDiario");
                });

            modelBuilder.Entity("GastosMensuales.BD.Datos.Entity.Ingreso", b =>
                {
                    b.HasOne("GastosMensuales.BD.Datos.Entity.Total", null)
                        .WithMany("Ingresos")
                        .HasForeignKey("TotalId");

                    b.HasOne("GastosMensuales.BD.Datos.Entity.Usuario", "Usuario")
                        .WithMany("Ingresos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("GastosMensuales.BD.Datos.Entity.Total", b =>
                {
                    b.Navigation("GastosDiarios");

                    b.Navigation("GastosFijos");

                    b.Navigation("Ingresos");
                });

            modelBuilder.Entity("GastosMensuales.BD.Datos.Entity.Usuario", b =>
                {
                    b.Navigation("GastosDiarios");

                    b.Navigation("GastosFijos");

                    b.Navigation("Ingresos");
                });
#pragma warning restore 612, 618
        }
    }
}
